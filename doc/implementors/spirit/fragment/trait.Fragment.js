(function() {var implementors = {};
implementors["spirit"] = [];
implementors["spirit_daemonize"] = [{"text":"impl Fragment for Daemon","synthetic":false,"types":[]},{"text":"impl Fragment for UserDaemon","synthetic":false,"types":[]}];
implementors["spirit_dipstick"] = [{"text":"impl Fragment for Config","synthetic":false,"types":[]}];
implementors["spirit_hyper"] = [{"text":"impl&lt;Transport&gt; Fragment for HyperServer&lt;Transport&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Transport: Fragment + Debug + Clone + Comparable,&nbsp;</span>","synthetic":false,"types":[]}];
implementors["spirit_log"] = [{"text":"impl Fragment for Cfg","synthetic":false,"types":[]},{"text":"impl Fragment for CfgAndOpts","synthetic":false,"types":[]}];
implementors["spirit_reqwest"] = [{"text":"impl Fragment for ReqwestClient","synthetic":false,"types":[]}];
implementors["spirit_tokio"] = [{"text":"impl&lt;A, B&gt; Fragment for Either&lt;A, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Fragment,<br>&nbsp;&nbsp;&nbsp;&nbsp;A::Driver: Driver&lt;A, SubFragment = A&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Fragment,<br>&nbsp;&nbsp;&nbsp;&nbsp;B::Driver: Driver&lt;B, SubFragment = B&gt;,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;A, L&gt; Fragment for WithListenLimits&lt;A, L&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Clone + Debug + Fragment + Comparable,<br>&nbsp;&nbsp;&nbsp;&nbsp;L: Clone + Debug + ListenLimits + PartialEq,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;ExtraCfg, UnixStreamConfig&gt; Fragment for UnixListen&lt;ExtraCfg, UnixStreamConfig&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;ExtraCfg: Clone + Debug + PartialEq,<br>&nbsp;&nbsp;&nbsp;&nbsp;UnixStreamConfig: Clone + Debug + PartialEq,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;ExtraCfg&gt; Fragment for DatagramListen&lt;ExtraCfg&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;ExtraCfg: Clone + Debug + PartialEq,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;ExtraCfg, TcpConfig&gt; Fragment for TcpListen&lt;ExtraCfg, TcpConfig&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;ExtraCfg: Clone + Debug + PartialEq,<br>&nbsp;&nbsp;&nbsp;&nbsp;TcpConfig: Clone + Debug + PartialEq,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;ExtraCfg&gt; Fragment for UdpListen&lt;ExtraCfg&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;ExtraCfg: Clone + Debug + PartialEq,&nbsp;</span>","synthetic":false,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()