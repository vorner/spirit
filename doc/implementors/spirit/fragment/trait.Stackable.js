(function() {var implementors = {};
implementors["spirit_hyper"] = [{"text":"impl&lt;Transport&gt; Stackable for HyperServer&lt;Transport&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Transport: Stackable,&nbsp;</span>","synthetic":false,"types":[]}];
implementors["spirit_tokio"] = [{"text":"impl&lt;A, B&gt; Stackable for Either&lt;A, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Stackable,<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Stackable,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;A, L&gt; Stackable for WithListenLimits&lt;A, L&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Stackable,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;ExtraCfg, UnixStreamConfig&gt; Stackable for UnixListen&lt;ExtraCfg, UnixStreamConfig&gt;","synthetic":false,"types":[]},{"text":"impl&lt;ExtraCfg&gt; Stackable for DatagramListen&lt;ExtraCfg&gt;","synthetic":false,"types":[]},{"text":"impl&lt;ExtraCfg, TcpConfig&gt; Stackable for TcpListen&lt;ExtraCfg, TcpConfig&gt;","synthetic":false,"types":[]},{"text":"impl&lt;ExtraCfg&gt; Stackable for UdpListen&lt;ExtraCfg&gt;","synthetic":false,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()