(function() {var implementors = {};
implementors["openssl"] = [{"text":"impl ForeignType for Asn1GeneralizedTime","synthetic":false,"types":[]},{"text":"impl ForeignType for Asn1Time","synthetic":false,"types":[]},{"text":"impl ForeignType for Asn1String","synthetic":false,"types":[]},{"text":"impl ForeignType for Asn1Integer","synthetic":false,"types":[]},{"text":"impl ForeignType for Asn1BitString","synthetic":false,"types":[]},{"text":"impl ForeignType for Asn1Object","synthetic":false,"types":[]},{"text":"impl ForeignType for BigNumContext","synthetic":false,"types":[]},{"text":"impl ForeignType for BigNum","synthetic":false,"types":[]},{"text":"impl ForeignType for CmsContentInfo","synthetic":false,"types":[]},{"text":"impl ForeignType for Conf","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; ForeignType for Dh&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; ForeignType for Dsa&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl ForeignType for EcGroup","synthetic":false,"types":[]},{"text":"impl ForeignType for EcPoint","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; ForeignType for EcKey&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl ForeignType for EcdsaSig","synthetic":false,"types":[]},{"text":"impl ForeignType for OcspBasicResponse","synthetic":false,"types":[]},{"text":"impl ForeignType for OcspCertId","synthetic":false,"types":[]},{"text":"impl ForeignType for OcspResponse","synthetic":false,"types":[]},{"text":"impl ForeignType for OcspRequest","synthetic":false,"types":[]},{"text":"impl ForeignType for OcspOneReq","synthetic":false,"types":[]},{"text":"impl ForeignType for Pkcs12","synthetic":false,"types":[]},{"text":"impl ForeignType for Pkcs7","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; ForeignType for PKey&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; ForeignType for Rsa&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl ForeignType for SrtpProtectionProfile","synthetic":false,"types":[]},{"text":"impl ForeignType for SslContext","synthetic":false,"types":[]},{"text":"impl ForeignType for SslCipher","synthetic":false,"types":[]},{"text":"impl ForeignType for SslSession","synthetic":false,"types":[]},{"text":"impl ForeignType for Ssl","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Stackable&gt; ForeignType for Stack&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl ForeignType for OpensslString","synthetic":false,"types":[]},{"text":"impl ForeignType for X509VerifyParam","synthetic":false,"types":[]},{"text":"impl ForeignType for X509StoreBuilder","synthetic":false,"types":[]},{"text":"impl ForeignType for X509Store","synthetic":false,"types":[]},{"text":"impl ForeignType for X509StoreContext","synthetic":false,"types":[]},{"text":"impl ForeignType for X509","synthetic":false,"types":[]},{"text":"impl ForeignType for X509Extension","synthetic":false,"types":[]},{"text":"impl ForeignType for X509Name","synthetic":false,"types":[]},{"text":"impl ForeignType for X509NameEntry","synthetic":false,"types":[]},{"text":"impl ForeignType for X509Req","synthetic":false,"types":[]},{"text":"impl ForeignType for GeneralName","synthetic":false,"types":[]},{"text":"impl ForeignType for X509Algorithm","synthetic":false,"types":[]},{"text":"impl ForeignType for X509Object","synthetic":false,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()