initSidebarItems({"enum":[["Event","Using the ptrace options the tracer can configure the tracee to stop at certain events. This enum is used to define those events as defined in `man ptrace`."],["Request","Ptrace Request enum defining the action to be taken."]],"fn":[["attach","Attach to a running process, as with `ptrace(PTRACE_ATTACH, ...)`"],["cont","Restart the stopped tracee process, as with `ptrace(PTRACE_CONT, ...)`"],["detach","Detaches the current running process, as with `ptrace(PTRACE_DETACH, ...)`"],["getevent","Gets a ptrace event as described by `ptrace(PTRACE_GETEVENTMSG,...)`"],["getregs","Get user registers, as with `ptrace(PTRACE_GETREGS, ...)`"],["getsiginfo","Get siginfo as with `ptrace(PTRACE_GETSIGINFO,...)`"],["kill","Issues a kill request as with `ptrace(PTRACE_KILL, ...)`"],["read","Reads a word from a processes memory at the given address"],["seize","Attach to a running process, as with `ptrace(PTRACE_SEIZE, ...)`"],["setoptions","Set options, as with `ptrace(PTRACE_SETOPTIONS,...)`."],["setregs","Set user registers, as with `ptrace(PTRACE_SETREGS, ...)`"],["setsiginfo","Set siginfo as with `ptrace(PTRACE_SETSIGINFO,...)`"],["step","Move the stopped tracee process forward by a single step as with  `ptrace(PTRACE_SINGLESTEP, ...)`"],["syscall","Ask for next syscall, as with `ptrace(PTRACE_SYSCALL, ...)`"],["traceme","Sets the process as traceable, as with `ptrace(PTRACE_TRACEME, ...)`"],["write","Writes a word into the processes memory at the given address"]],"struct":[["Options","Ptrace options used in conjunction with the PTRACE_SETOPTIONS request. See `man ptrace` for more details."]],"type":[["AddressType",""]]});